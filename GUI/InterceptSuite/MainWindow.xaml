<Window x:Class="InterceptSuite.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InterceptSuite"
        mc:Ignorable="d"
        Title="Intercept Suite" Height="800" Width="1200"
        WindowStartupLocation="CenterScreen"
        Background="#1E1E1E"
        Foreground="#E0E0E0"
        UseLayoutRounding="True">
    <Window.Resources>
        <!-- Dark Theme Resources -->        <SolidColorBrush x:Key="DarkBackground" Color="#1E1E1E"/>
        <SolidColorBrush x:Key="DarkPanelBackground" Color="#252526"/>
        <SolidColorBrush x:Key="MenuBackground" Color="#333333"/>
        <SolidColorBrush x:Key="TextColor" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="AccentColor" Color="#570987"/>
        <SolidColorBrush x:Key="SecondaryAccent" Color="#570987"/>
        <SolidColorBrush x:Key="BorderBrush" Color="#3E3E3E"/>

        <!-- ComboBox Toggle Button Template -->
        <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2"
                       Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}" />

                <Border Grid.Column="1"
                       Margin="1"
                       Background="{TemplateBinding Background}">
                    <Path Name="Arrow"
                         Fill="{StaticResource TextColor}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         Data="M 0 0 L 4 4 L 8 0 Z"/>
                </Border>
            </Grid>            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentColor}" />
                    <Setter TargetName="Arrow" Property="Fill" Value="White" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentColor}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Button Style -->
        <Style x:Key="DarkMenuButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#333333"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="BorderBrush" Value="#444444"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Margin" Value="5,5"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#444444"/>
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#222222"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBlock Style -->
        <Style x:Key="DarkTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        </Style>        <!-- TextBox Style -->
        <Style x:Key="DarkTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,3"/>
            <Setter Property="CaretBrush" Value="{StaticResource TextColor}"/>
            <Setter Property="SelectionBrush" Value="#007ACC"/>
            <Setter Property="SelectionOpacity" Value="0.7"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style><!-- ComboBox Style -->
        <Style x:Key="DarkComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>

            <!-- Override the control template to ensure dark styling throughout -->
            <Setter Property="Template">
                <Setter.Value>                    <ControlTemplate TargetType="ComboBox">
                        <Grid Name="MainGrid">
                            <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         Name="ToggleButton"
                                         Template="{StaticResource ComboBoxToggleButtonTemplate}"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         Focusable="false"
                                         ClickMode="Press"/>

                            <ContentPresenter Name="ContentSite"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            Margin="10,3,30,3"/>

                            <!-- Dropdown popup -->
                            <Popup Name="PART_Popup"
                                  IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  AllowsTransparency="True"
                                  PopupAnimation="Slide"
                                  Focusable="False"
                                  Placement="Bottom">
                                <Border Background="#2D2D30"
                                       BorderBrush="#3F3F46"
                                       BorderThickness="1"
                                       MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                       MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <ScrollViewer SnapsToDevicePixels="True"
                                                 Margin="0"
                                                 Background="#2D2D30">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="PART_Popup" Property="IsOpen" Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
              <!-- Style the dropdown items -->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="#2D2D30"/>
                        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                        <Setter Property="Padding" Value="5,3"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Name="Border"
                                           Background="{TemplateBinding Background}"
                                           BorderThickness="0"
                                           Padding="{TemplateBinding Padding}">
                                        <ContentPresenter />
                                    </Border>                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#3E3E40"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#007ACC"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="#666666"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>        <!-- ListView Item Style -->
        <Style x:Key="DarkListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <GridViewRowPresenter x:Name="PART_Header"
                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#3E3E42"/>
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#007ACC"/>
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#1C97EA"/>
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ListView Style -->
        <Style x:Key="DarkListViewStyle" TargetType="ListView">
            <Setter Property="Background" Value="#252526"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource DarkListViewItemStyle}"/>
        </Style>        <!-- GridViewColumnHeader Style (for ListView headers) -->
        <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Border x:Name="HeaderBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <TextBlock x:Name="HeaderContent"
                                       Text="{TemplateBinding Content}"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#444444"/>
                                <Setter TargetName="HeaderContent" Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#007ACC"/>
                                <Setter TargetName="HeaderContent" Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- GroupBox Style -->
        <Style x:Key="DarkGroupBoxStyle" TargetType="GroupBox">
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
        </Style>        <!-- CheckBox Style -->
        <Style x:Key="DarkCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        </Style>

        <!-- RadioButton Style -->
        <Style x:Key="DarkRadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        </Style>
          <!-- Standard Button Style for all regular buttons (non-menu buttons) -->
        <Style x:Key="DarkButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3E3E42"/>
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#222222"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Green button style for Start functions -->
        <Style x:Key="GreenButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#0E6027"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#128A38"/>
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#084016"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Red button style for Stop functions -->
        <Style x:Key="RedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#8B2E2E"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#A83232"/>
                                <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#5A1E1E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="{StaticResource DarkBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Top Menu Bar -->
        <Border Grid.Row="0" Background="{StaticResource MenuBackground}" BorderBrush="#555555"
                BorderThickness="0,0,0,1">
            <Grid Margin="10,5">                <!-- Navigation Menu -->
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">                    <Button Name="InterceptButton" Content="Intercept"
                            Style="{StaticResource DarkMenuButtonStyle}"
                            Click="NavigationButton_Click" Tag="Intercept"/>
                    <Button Name="ProxyHistoryButton" Content="Proxy History"
                            Style="{StaticResource DarkMenuButtonStyle}"
                            Click="NavigationButton_Click" Tag="ProxyHistory"/>
                    <Button Name="SettingsButton" Content="Settings"
                            Style="{StaticResource DarkMenuButtonStyle}"
                            Click="NavigationButton_Click" Tag="Settings"/>
                    <Button Name="ConnectionsButton" Content="Connections"
                            Style="{StaticResource DarkMenuButtonStyle}"
                            Click="NavigationButton_Click" Tag="Connections"/></StackPanel>
            </Grid>
        </Border>        <!-- Main Content Area -->
        <Grid Grid.Row="1" Margin="20">
            <!-- Settings Panel -->            <Grid Name="SettingsPanel" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Settings" FontSize="24" FontWeight="Bold" Margin="0,0,0,20"
                           Grid.Row="0" Style="{StaticResource DarkTextBlockStyle}"/>

                <Grid Grid.Row="1">
                    <StackPanel>
                        <TextBlock Text="Proxy Configuration" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"
                                   Style="{StaticResource DarkTextBlockStyle}"/>

                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>                            <TextBlock Text="Bind Address:" VerticalAlignment="Center" Margin="0,0,10,0"
                                       Style="{StaticResource DarkTextBlockStyle}"/>
                            <ComboBox Name="BindAddressComboBox" Grid.Column="1" Height="25"
                                     Style="{StaticResource DarkComboBoxStyle}"/>                            <Button Name="RefreshInterfacesButton" Content="Refresh Interfaces" Grid.Column="2"
                                    Margin="5,0,0,0" Click="RefreshInterfaces_Click" Padding="8,0"
                                    Style="{StaticResource DarkButtonStyle}"/>
                        </Grid>                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>                            <TextBlock Text="Port:" VerticalAlignment="Center" Margin="0,0,10,0"
                                      Style="{StaticResource DarkTextBlockStyle}"/>
                            <TextBox Name="PortTextBox" Grid.Column="1" Text="4444" Height="25"
                                    Style="{StaticResource DarkTextBoxStyle}"/>
                        </Grid>

                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Log File:" VerticalAlignment="Center" Margin="0,0,10,0"
                                      Style="{StaticResource DarkTextBlockStyle}"/>
                            <TextBox Name="LogFileTextBox" Grid.Column="1" Text="tls_proxy.log" Height="25"
                                    Style="{StaticResource DarkTextBoxStyle}"/>
                            <Button Name="BrowseLogFileButton" Content="Browse" Grid.Column="2"
                                    Margin="5,0,0,0" Click="BrowseLogFile_Click" Height="25"
                                    Style="{StaticResource DarkButtonStyle}"/>
                        </Grid>

                        <CheckBox Name="VerboseModeCheckBox" Content="Verbose Mode" Margin="0,0,0,10"
                                 Style="{StaticResource DarkCheckBoxStyle}" />                        <Button Name="ApplyConfigButton" Content="Apply Configuration" Margin="0,10,0,10"
                                Click="ApplyConfig_Click" Padding="15,8" HorizontalAlignment="Left"
                                Style="{StaticResource DarkButtonStyle}"/>

                        <!-- Intercept Direction Configuration -->
                        <TextBlock Text="Intercept Configuration" FontWeight="Bold" FontSize="16" Margin="0,20,0,10"
                                   Style="{StaticResource DarkTextBlockStyle}"/>

                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <TextBlock Text="Intercept Direction:" Margin="0,0,10,0"
                                      VerticalAlignment="Center"
                                      Style="{StaticResource DarkTextBlockStyle}"/>
                            <ComboBox Name="InterceptDirectionComboBox" Width="200" Height="25"
                                     Style="{StaticResource DarkComboBoxStyle}"
                                     SelectionChanged="InterceptDirection_Changed">
                                <ComboBoxItem Content="None" Tag="0"/>
                                <ComboBoxItem Content="Client → Server" Tag="1"/>
                                <ComboBoxItem Content="Server → Client" Tag="2"/>
                                <ComboBoxItem Content="Both Directions" Tag="3"/>
                            </ComboBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,20,0,0">                            <Button Name="StartProxyButton" Content="Start Proxy" Margin="0,0,10,0"
                                    Click="StartProxy_Click"
                                    Style="{StaticResource GreenButtonStyle}"/>
                            <Button Name="StopProxyButton" Content="Stop Proxy" Margin="0,0,10,0"
                                    Click="StopProxy_Click" IsEnabled="False"
                                    Style="{StaticResource RedButtonStyle}"/>                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Grid>            <!-- Intercept Panel -->
            <Grid Name="InterceptPanel" Visibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Intercept" FontSize="24" FontWeight="Bold" Margin="0,0,0,20"
                          Style="{StaticResource DarkTextBlockStyle}" Grid.Row="0"/>

                <!-- Intercept Controls -->
                <Grid Grid.Row="1" Margin="0,0,0,20">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>                    <!-- Intercept Enable/Disable -->
                    <GroupBox Header="Intercept Control" Grid.Row="0" Margin="0,0,0,15"
                              Style="{StaticResource DarkGroupBoxStyle}">
                        <StackPanel Margin="10">
                            <CheckBox Name="InterceptEnabledCheckBox" Content="Intercept is on"
                                     Style="{StaticResource DarkCheckBoxStyle}"
                                     Checked="InterceptEnabled_Changed"
                                     Unchecked="InterceptEnabled_Changed"/>
                        </StackPanel>
                    </GroupBox>

                    <!-- Current Intercept Status -->
                    <GroupBox Header="Current Intercept" Grid.Row="1" Margin="0,0,0,15"
                              Style="{StaticResource DarkGroupBoxStyle}">
                        <StackPanel Margin="10">
                            <TextBlock Name="InterceptStatusText" Text="No intercept pending"
                                      Style="{StaticResource DarkTextBlockStyle}"/>
                        </StackPanel>
                    </GroupBox>

                    <!-- Action Buttons -->
                    <GroupBox Header="Actions" Grid.Row="2"
                              Style="{StaticResource DarkGroupBoxStyle}">
                        <StackPanel Orientation="Horizontal" Margin="10">
                            <Button Name="ForwardButton" Content="Forward"
                                   Click="Forward_Click" IsEnabled="False"
                                   Style="{StaticResource GreenButtonStyle}"
                                   Margin="0,0,10,0"/>
                            <Button Name="DropButton" Content="Drop"
                                   Click="Drop_Click" IsEnabled="False"
                                   Style="{StaticResource RedButtonStyle}"
                                   Margin="0,0,10,0"/>
                            <Button Name="ForwardModifiedButton" Content="Forward Modified"
                                   Click="ForwardModified_Click" IsEnabled="False"
                                   Style="{StaticResource DarkButtonStyle}"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>

                <!-- Intercepted Data View -->
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Connection Info -->
                    <GroupBox Header="Connection Information" Grid.Row="0" Margin="0,0,0,10"
                              Style="{StaticResource DarkGroupBoxStyle}">
                        <Grid Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Connection ID:" Grid.Column="0" Margin="0,0,10,0"
                                      VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>
                            <TextBlock Name="ConnectionIdText" Text="-" Grid.Column="1" Margin="0,0,20,0"
                                      VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>

                            <TextBlock Text="Direction:" Grid.Column="2" Margin="0,0,10,0"
                                      VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>
                            <TextBlock Name="DirectionText" Text="-" Grid.Column="3" Margin="0,0,20,0"
                                      VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>

                            <TextBlock Text="Endpoint:" Grid.Column="4" Margin="0,0,10,0"
                                      VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>
                            <TextBlock Name="EndpointText" Text="-" Grid.Column="5"
                                      VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>
                        </Grid>
                    </GroupBox>

                    <!-- Data Editor -->
                    <GroupBox Header="Intercepted Data" Grid.Row="1"
                              Style="{StaticResource DarkGroupBoxStyle}">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                              <!-- View Mode Toggle -->
                            <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,10">
                                <RadioButton Name="TextViewRadio" Content="Text View"
                                           GroupName="ViewMode" IsChecked="True"
                                           Checked="ViewMode_Changed"
                                           Style="{StaticResource DarkRadioButtonStyle}"/>
                                <RadioButton Name="HexViewRadio" Content="Hex View"
                                           GroupName="ViewMode" Margin="20,0,0,0"
                                           Checked="ViewMode_Changed"
                                           Style="{StaticResource DarkRadioButtonStyle}"/>
                            </StackPanel>

                            <!-- Data Text Box -->
                            <TextBox Name="InterceptDataTextBox" Grid.Row="1"
                                    Style="{StaticResource DarkTextBoxStyle}"
                                    TextWrapping="NoWrap"
                                    AcceptsReturn="True"
                                    FontFamily="Consolas"
                                    FontSize="12"
                                    Background="#1E1E1E"
                                    Foreground="#E0E0E0"
                                    BorderThickness="1"
                                    Padding="8"
                                    HorizontalScrollBarVisibility="Auto"
                                    VerticalScrollBarVisibility="Auto"
                                    TextChanged="InterceptDataTextBox_TextChanged"/>
                        </Grid>
                    </GroupBox>
                </Grid>
            </Grid>

            <!-- Connections Panel -->
            <Grid Name="ConnectionsPanel" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Connections" FontSize="24" FontWeight="Bold" Margin="0,0,0,20"
                          Style="{StaticResource DarkTextBlockStyle}" Grid.Row="0"/>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,10" Grid.Row="1">
                    <Button Name="ClearConnectionsButton" Content="Clear Connections" Margin="0,0,10,0"
                           Click="ClearConnections_Click"
                           Style="{StaticResource DarkButtonStyle}"/>
                    <Button Name="ExportConnectionsButton" Content="Export Connections"
                           Click="ExportConnections_Click"
                           Style="{StaticResource DarkButtonStyle}"/>
                </StackPanel>

                <ListView Name="ConnectionsList" Style="{StaticResource DarkListViewStyle}" Grid.Row="2"
                          VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                            <GridViewColumn Header="Timestamp" Width="150" DisplayMemberBinding="{Binding Timestamp}"/>
                            <GridViewColumn Header="Event" Width="100" DisplayMemberBinding="{Binding Event}"/>
                            <GridViewColumn Header="Connection ID" Width="100" DisplayMemberBinding="{Binding ConnectionId}"/>
                            <GridViewColumn Header="Source IP" Width="120" DisplayMemberBinding="{Binding SourceIp}"/>
                            <GridViewColumn Header="Source Port" Width="100" DisplayMemberBinding="{Binding SourcePort}"/>
                            <GridViewColumn Header="Destination IP" Width="120" DisplayMemberBinding="{Binding DestinationIp}"/>
                            <GridViewColumn Header="Destination Port" Width="100" DisplayMemberBinding="{Binding DestinationPort}"/>                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>            <!-- Proxy History Panel --><Grid Name="ProxyHistoryPanel" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Proxy History" FontSize="24" FontWeight="Bold" Margin="0,0,0,20"
                          Style="{StaticResource DarkTextBlockStyle}" Grid.Row="0"/>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,10" Grid.Row="1">
                    <Button Name="ClearHistoryButton" Content="Clear History" Margin="0,0,10,0"
                           Click="ClearHistory_Click"
                           Style="{StaticResource DarkButtonStyle}"/>
                    <Button Name="ExportHistoryButton" Content="Export History"
                           Click="ExportHistory_Click"
                           Style="{StaticResource DarkButtonStyle}"/>
                </StackPanel>                <ListView Name="HistoryList" Style="{StaticResource DarkListViewStyle}" Grid.Row="2"
                          VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                          SelectionChanged="HistoryList_SelectionChanged">
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{StaticResource GridViewColumnHeaderStyle}">
                            <GridViewColumn Header="Timestamp" Width="150" DisplayMemberBinding="{Binding Timestamp}"/>
                            <GridViewColumn Header="Source IP" Width="120" DisplayMemberBinding="{Binding SourceIp}"/>
                            <GridViewColumn Header="Destination IP" Width="120" DisplayMemberBinding="{Binding DestinationIp}"/>
                            <GridViewColumn Header="Port" Width="60" DisplayMemberBinding="{Binding Port}"/>
                            <GridViewColumn Header="Type" Width="80" DisplayMemberBinding="{Binding Type}"/>
                            <GridViewColumn Header="Modified" Width="60" DisplayMemberBinding="{Binding ModifiedIndicator}"/>
                        </GridView>
                    </ListView.View>
                </ListView>

                <!-- Splitter between history list and data view -->
                <GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch"
                              Background="#3F3F46" ResizeBehavior="PreviousAndNext"/>                <!-- Data view pane with split display for original and modified -->
                <Grid Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Original data panel (only shown when modified) -->
                    <Grid Grid.Column="0" x:Name="OriginalDataPanel" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <TextBlock Text="Original Data" Grid.Row="0" Margin="5,0,0,5"
                                  Style="{StaticResource DarkTextBlockStyle}" FontWeight="Bold"/>
                        
                        <TextBox Name="OriginalDataTextBox" Grid.Row="1"
                                Style="{StaticResource DarkTextBoxStyle}"
                                TextWrapping="NoWrap"
                                AcceptsReturn="True"
                                IsReadOnly="True"
                                FontFamily="Consolas"
                                FontSize="12"
                                Background="#1E1E1E"
                                Foreground="#E0E0E0"
                                BorderThickness="1"
                                Padding="8"
                                HorizontalScrollBarVisibility="Auto"
                                VerticalScrollBarVisibility="Auto"/>
                    </Grid>
                    
                    <!-- Splitter between original and modified data -->
                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"
                                  Background="#3F3F46" Visibility="Collapsed" x:Name="DataSplitter"/>
                    
                    <!-- Modified data panel (or regular data when not modified) -->
                    <Grid Grid.Column="2" x:Name="ModifiedDataPanel">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <TextBlock Name="CurrentDataLabel" Text="Data" Grid.Row="0" Margin="5,0,0,5"
                                  Style="{StaticResource DarkTextBlockStyle}" FontWeight="Bold"/>
                        
                        <TextBox Name="HistoryDataTextBox" Grid.Row="1"
                                Style="{StaticResource DarkTextBoxStyle}"
                                TextWrapping="NoWrap"
                                AcceptsReturn="True"
                                IsReadOnly="True"
                                FontFamily="Consolas"
                                FontSize="12"
                                Background="#1E1E1E"
                                Foreground="#E0E0E0"
                                BorderThickness="1"
                                Padding="8"
                                HorizontalScrollBarVisibility="Auto"
                                VerticalScrollBarVisibility="Auto"/>
                    </Grid>
                </Grid>
            </Grid>
        </Grid><!-- Bottom Status Bar -->
        <Border Grid.Row="2" Background="{StaticResource MenuBackground}" BorderBrush="#444444"
               BorderThickness="0,1,0,0">
            <Grid Margin="10,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Status Text -->
                <TextBlock Grid.Column="0" Name="StatusText" Text="Ready" VerticalAlignment="Center"
                           Style="{StaticResource DarkTextBlockStyle}"/>

                <!-- Statistics -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0">
                    <TextBlock Text="Active: " VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>
                    <TextBlock Name="ActiveConnectionsText" Text="0" VerticalAlignment="Center" Margin="0,0,10,0" Style="{StaticResource DarkTextBlockStyle}"/>

                    <TextBlock Text="Total: " VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>
                    <TextBlock Name="TotalConnectionsText" Text="0" VerticalAlignment="Center" Margin="0,0,10,0" Style="{StaticResource DarkTextBlockStyle}"/>

                    <TextBlock Text="Sent: " VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>
                    <TextBlock Name="BytesSentText" Text="0" VerticalAlignment="Center" Margin="0,0,10,0" Style="{StaticResource DarkTextBlockStyle}"/>

                    <TextBlock Text="Received: " VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>
                    <TextBlock Name="BytesReceivedText" Text="0" VerticalAlignment="Center" Style="{StaticResource DarkTextBlockStyle}"/>
                </StackPanel>

                <!-- DLL Status -->
                <TextBlock Grid.Column="2" Name="DllStatusText" Text="DLL Status: Not Loaded"
                           VerticalAlignment="Center" Foreground="#C0C0C0"
                           Margin="20,0,20,0"/>

                <!-- Current Time -->
                <TextBlock Grid.Column="3" Name="CurrentTimeText" Text="" VerticalAlignment="Center"
                           Foreground="{StaticResource SecondaryAccent}" Margin="10,0,0,0"/>
            </Grid>
        </Border>    </Grid>
</Window>
