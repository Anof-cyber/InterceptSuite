name: Create Release Package

on:
  release:
    types: [published, created]
  push:
    tags:
      - 'v*'  # Run when tag is pushed matching pattern v*, like v1.0.0

permissions:
  contents: write  # Needed to create releases
  packages: read

jobs:
  build-and-release:
    runs-on: windows-latest
    env:
      CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      BUILD_TYPE: Release

    steps:
    - uses: actions/checkout@v4    - name: Cache vcpkg
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/vcpkg
          !${{ github.workspace }}/vcpkg/buildtrees
          !${{ github.workspace }}/vcpkg/packages
          !${{ github.workspace }}/vcpkg/downloads
        key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}-v2  # Updated cache key to invalidate old cache

    - name: Setup vcpkg
      uses: actions/checkout@v4
      with:
        repository: microsoft/vcpkg
        path: vcpkg
        fetch-depth: 0  # Fetch full history to ensure baseline commit is available

    - name: Bootstrap vcpkg
      run: |
        cd vcpkg
        .\bootstrap-vcpkg.bat -disableMetrics
        # Update vcpkg to latest if there are baseline issues
        git pull origin master

    - name: Configure CMake
      run: cmake -B build -S . -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_TOOLCHAIN_FILE=${{ env.CMAKE_TOOLCHAIN_FILE }}
    - name: Build DLL
      run: cmake --build build --config ${{ env.BUILD_TYPE }}


    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x    - name: Restore dependencies
      run: dotnet restore GUI/InterceptSuite/InterceptSuite.csproj --runtime win-x64

    - name: Clean
      run: dotnet clean GUI/InterceptSuite/InterceptSuite.csproj --configuration Release

    - name: Build
      run: dotnet build GUI/InterceptSuite/InterceptSuite.csproj --configuration Release --runtime win-x64

    - name: Publish
      run: dotnet publish GUI/InterceptSuite/InterceptSuite.csproj --configuration Release --output publish --self-contained false --runtime win-x64

    - name: Copy DLL files
      run: Copy-Item -Path "build\Release\*.dll" -Destination "publish\" -Force

    - name: Create ZIP package
      run: |
        $version = "${{ github.ref_name }}".Substring(1)
        Compress-Archive -Path "publish\*" -DestinationPath "InterceptSuite-v$version-win-x64.zip" -Force

    - name: Upload to GitHub Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: InterceptSuite-v*-win-x64.zip