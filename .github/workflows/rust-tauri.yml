name: Tauri App CI/CD

on:
  push:
    branches: [ main, master, Cross-Platform ]
    paths:
      - 'GUI/InterceptSuite/**'
      - '.github/workflows/rust-tauri.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'GUI/InterceptSuite/**'

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: GUI/InterceptSuite

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-22.04, windows-latest, macos-latest]

    runs-on: ${{ matrix.platform }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'GUI/InterceptSuite/package-lock.json'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install system dependencies (Ubuntu)
      if: matrix.platform == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libgtk-3-dev \
          libwebkit2gtk-4.1-dev \
          libappindicator3-dev \
          librsvg2-dev \
          patchelf

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          GUI/InterceptSuite/src-tauri/target/
          GUI/InterceptSuite/node_modules
        key: ${{ runner.os }}-deps-${{ hashFiles('GUI/InterceptSuite/package-lock.json') }}-${{ hashFiles('GUI/InterceptSuite/src-tauri/Cargo.lock') }}

    - name: Install dependencies
      run: npm ci

    - name: Create mock environment
      run: |
        # Create necessary directories
        mkdir -p src-tauri/resources
        mkdir -p ../build

        # Create mock libraries
        if [ "${{ runner.os }}" = "Windows" ]; then
          echo "mock" > ../build/Intercept.dll
          echo "mock" > ../build/Intercept.lib
        elif [ "${{ runner.os }}" = "macOS" ]; then
          echo "mock" > ../build/libIntercept.dylib
          echo "mock" > ../build/libIntercept.a
        else
          echo "mock" > ../build/libIntercept.so
          echo "mock" > ../build/libIntercept.a
        fi

        # Create dummy resource
        echo "mock resource" > src-tauri/resources/dummy.txt
      shell: bash

    - name: Build application
      run: |
        npm run build
        npm run tauri build

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tauri-${{ runner.os }}-build
        path: |
          GUI/InterceptSuite/src-tauri/target/release/bundle/**/*
        if-no-files-found: warn
        retention-days: 30

  security-check:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install dependencies
      run: |
        cd GUI/InterceptSuite
        npm ci

    - name: Run security audits
      run: |
        cd GUI/InterceptSuite
        npm audit --audit-level moderate || true
        cargo install cargo-audit
        cd src-tauri
        cargo audit || true