name: Build Intercept Suite DLL

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: windows-latest
    env:
      CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      BUILD_TYPE: Release

    steps:
    - uses: actions/checkout@v4

    - name: Cache vcpkg
      uses: actions/cache@v4
      with:
        path: |
          ${{ github.workspace }}/vcpkg
          !${{ github.workspace }}/vcpkg/buildtrees
          !${{ github.workspace }}/vcpkg/packages
          !${{ github.workspace }}/vcpkg/downloads
        key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
    - name: Setup vcpkg
      uses: actions/checkout@v4
      with:
        repository: microsoft/vcpkg
        path: vcpkg
        fetch-depth: 0  # Fetch full history to ensure baseline commit is available

    - name: Bootstrap vcpkg
      run: |
        cd vcpkg
        .\bootstrap-vcpkg.bat -disableMetrics
        # Update vcpkg to latest if there are baseline issues
        git pull origin master

    - name: Configure CMake
      run: cmake -B build -S . -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_TOOLCHAIN_FILE=${{ env.CMAKE_TOOLCHAIN_FILE }}
    - name: Build DLL
      run: cmake --build build --config ${{ env.BUILD_TYPE }}

    - name: List built files
      run: |
        echo "--- Output Directory Contents ---"
        dir build\${{ env.BUILD_TYPE }}
        echo "--- Check for Intercept.dll and dependencies ---"
        if (Test-Path -Path "build\${{ env.BUILD_TYPE }}\Intercept.dll") {
          echo "✅ Intercept.dll found in build output"
        } else {
          echo "❌ Intercept.dll not found in build output"
        }
        echo "--- Check for vcpkg directory ---"
        if (Test-Path -Path "vcpkg\installed\x64-windows\bin") {
          echo "--- vcpkg installed bin directory ---"
          dir vcpkg\installed\x64-windows\bin
        } else {
          echo "vcpkg bin directory not found - OpenSSL DLLs must be from another source"
        }

    - name: Package with CPack
      run: |
        cd build
        cpack -C ${{ env.BUILD_TYPE }}

        # Find package file dynamically
        $packageFile = Get-ChildItem -Path "." -Filter "Intercept-*-win64.zip" | Select-Object -First 1

        if ($packageFile) {
          $version = $packageFile.Name -replace 'Intercept-' -replace '-win64.zip'
          echo "✅ Package created successfully: $($packageFile.Name)"
          echo "::set-output name=PACKAGE_VERSION::$version"

          # Move to expected location for upload artifact
          New-Item -Path "package" -ItemType Directory -Force
          Copy-Item $packageFile.Name -Destination "package\Intercept-v$version-win-x64.zip"
        } else {
          echo "❌ Package creation failed - no package file found"
          exit 1
        }

    - name: Upload Package
      uses: actions/upload-artifact@v4
      with:
        name: Intercept-DLL-Windows
        path: build/package/Intercept-v*-win-x64.zip
        if-no-files-found: error
        retention-days: 90
